#+TITLE: tex4ht regression tests

* Basics
A unit consists of three main files:

- ~foo.tex~

 Minimal (non-)working example (MWE) ~.tex~ file.
 Would be nice to have metadata:
           - author/date of a file
           - issue description
           - solution description
           - bug ID (?)
           - etc.

- ~foo.ss~

  Pre-saved results file, which is compared against build results.
  Can be in various formats: ~html~, ~xml~, ~css~, plain text, ~svg~, binary (~png~)

- ~Makefile~

  Define rules:
  1. how to produce results
  2. how to compare results
  3. how to make pre-saved version

  Common targets:
  1. %.html - generate results
  2. %.diff - generate diff file
  3. %.ss   - presave file


* Setting new unit test

Run in shell:

#+BEGIN_SRC 
make unit=FOO new
#+END_SRC
 
This will create three files:
~./tests/FOO/Makefile~
~./tests/FOO/FOO.tex~
~./tests/FOO/FOO.ss~

Go to ~./tests/FOO/~ folder.
Put your LaTeX/TeX code in ~FOO.tex~ and amend metadata. Describe your issue.
Put your command line in  ~Makefile~. Default is ~htlatex $<~.

Run:
#+BEGIN_SRC sh
make check
#+END_SRC
This will create your html(or other) file(s) and *.diff file.
Initially you should get FAILURE. When you get correct HTML results, issue command:
#+BEGIN_SRC sh
make save
#+END_SRC
This will pre-save your result HTML file with ~*.ss~ extension. 
Run:
#+BEGIN_SRC sh
make clean
#+END_SRC
to clean up build files. 

If you run again:
#+BEGIN_SRC sh
make check clean
#+END_SRC
you should get SUCCESS. 

If you are not able to get SUCCESS, please leave ~FOO.ss~ file empty.

* Checking a unit

Go to a unit test folder under ~./tests/FOO/~. Run

#+BEGIN_SRC
make check
#+END_SRC

* Checking the bundle (all tests)

You can check all test by running
#+BEGIN_SRC sh
make check
#+END_SRC
at the top folder.

Your should get a summary report like this:
#+BEGIN_SRC 
      Summary
*******************
001	SUCCESS (t-172-oolatex-spaces).
002	SUCCESS (t-accents-combined).
003	SUCCESS (t-accents-xelatex).
004	SUCCESS (t-bmatrix).
005	FAILURE (t-hello). See ./build/t-hello/t-hello.diff
006	SUCCESS (t-lettrine).
007	SUCCESS (t-mathml-array).
008	SUCCESS (t-mwbk).
009	SUCCESS (t-scrartcl).
010	SUCCESS (t-scrbook-quoting).
011	SUCCESS (t-suits).
#+END_SRC


All files from ~/tests/t-<something>~ are copied to ~/build~
folder and command ~make check~ is run recursively.


* t.Makefile template file
  
  This file is a template for ~FOO.Makefile~ generation.

  Variables: ~FILE~

  Needs GNU M4 macro processor.


* External dependencies

  - GNU make (version 4.1)
  - GNU M4 macro processor (version 1.4). for Makefile templates
  - pandoc (version 2.3.1). For standalone html file generation. see ,e.g., t-suits, t-lettrine
  - make4ht (version v0.2b)
